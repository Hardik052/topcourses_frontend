{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhard\\\\Desktop\\\\FrontEnd\\\\top-course-starter\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Cards from \"./components/Cards\";\nimport Filter from \"./components/Filter\";\nimport Navbar from \"./components/Navbar\";\nimport Spinner from \"./components/Spinner\";\nimport { filterData, apiUrl } from \"./data\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [courses, setCourses] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [category, setCategory] = useState(filterData[0].title);\n  async function fetchData() {\n    setLoading(true);\n    try {\n      let response = await fetch(apiUrl);\n      let output = await response.json(); // Corrected by adding 'await' here\n\n      setCourses(output.data); // Set courses with the output data\n    } catch (e) {\n      toast.error(\"Network Error\");\n    }\n    setLoading(false);\n  }\n  useEffect(() => {\n    fetchData();\n  }, []); // Empty dependency array to call fetchData only once on mount\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-bgDark2\",\n        children: [/*#__PURE__*/_jsxDEV(Filter, {\n          filterData: filterData,\n          category: category,\n          setCategory: setCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-11/12 max-w-[1200px] mx-auto flex flex-col flex-wrap justify-center items-center min-h-[50vh]\",\n          children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(Cards, {\n            courses: courses,\n            category: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this) // Pass the courses data to Cards component\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"ngbPBYJeNkg7QoWkOQ0nJBHPvTg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Cards","Filter","Navbar","Spinner","filterData","apiUrl","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","courses","setCourses","loading","setLoading","category","setCategory","title","fetchData","response","fetch","output","json","data","e","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bhard/Desktop/FrontEnd/top-course-starter/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Cards from \"./components/Cards\";\nimport Filter from \"./components/Filter\";\nimport Navbar from \"./components/Navbar\";\nimport Spinner from \"./components/Spinner\";\nimport { filterData, apiUrl } from \"./data\";\nimport { toast } from \"react-toastify\";\n\nconst App = () => {\n  const [courses, setCourses] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const[category, setCategory] = useState(filterData[0].title)\n\n  async function fetchData() {\n    setLoading(true);\n    try {\n      let response = await fetch(apiUrl);\n      let output = await response.json(); // Corrected by adding 'await' here\n\n      setCourses(output.data); // Set courses with the output data\n\n    } catch (e) {\n      toast.error(\"Network Error\");\n    }\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []); // Empty dependency array to call fetchData only once on mount\n\n  return (\n    <>\n      <div className=\"min-h-screen flex flex-col\">\n        <Navbar />\n        <div className=\"bg-bgDark2\">\n        <Filter filterData={filterData}\n        category={category}\n        setCategory={setCategory} />\n        <div className=\"w-11/12 max-w-[1200px] mx-auto flex flex-col flex-wrap justify-center items-center min-h-[50vh]\">\n          {loading ? (\n            <Spinner />\n          ) : (\n            <Cards courses={courses} category={category} /> // Pass the courses data to Cards component\n          )}\n        </div>\n      </div>\n\n        </div>\n\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,UAAU,EAAEC,MAAM,QAAQ,QAAQ;AAC3C,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAK,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAACK,UAAU,CAAC,CAAC,CAAC,CAACe,KAAK,CAAC;EAE5D,eAAeC,SAASA,CAAA,EAAG;IACzBJ,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,IAAIK,QAAQ,GAAG,MAAMC,KAAK,CAACjB,MAAM,CAAC;MAClC,IAAIkB,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE,CAAC,CAAC;;MAEpCV,UAAU,CAACS,MAAM,CAACE,IAAI,CAAC,CAAC,CAAC;IAE3B,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVpB,KAAK,CAACqB,KAAK,CAAC,eAAe,CAAC;IAC9B;IACAX,UAAU,CAAC,KAAK,CAAC;EACnB;EAEAlB,SAAS,CAAC,MAAM;IACdsB,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEZ,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACEpB,OAAA;MAAKqB,SAAS,EAAC,4BAA4B;MAAAD,QAAA,gBACzCpB,OAAA,CAACN,MAAM;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACVzB,OAAA;QAAKqB,SAAS,EAAC,YAAY;QAAAD,QAAA,gBAC3BpB,OAAA,CAACP,MAAM;UAACG,UAAU,EAAEA,UAAW;UAC/Ba,QAAQ,EAAEA,QAAS;UACnBC,WAAW,EAAEA;QAAY;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAC5BzB,OAAA;UAAKqB,SAAS,EAAC,iGAAiG;UAAAD,QAAA,EAC7Gb,OAAO,gBACNP,OAAA,CAACL,OAAO;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG,gBAEXzB,OAAA,CAACR,KAAK;YAACa,OAAO,EAAEA,OAAQ;YAACI,QAAQ,EAAEA;UAAS;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG,CAAC;QACjD;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAEE,iBAEP;AAEP,CAAC;AAACrB,EAAA,CA5CID,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA8CT,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}